<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>izlyforever</title><link>https://izlyforever.github.io/cpplibforCP/</link><atom:link href="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml" rel="self" type="application/rss+xml" /><managingEditor>izlyforever</managingEditor><docs>https://github.com/izlyforever/cpplibforCP/</docs><language>en</language> <pubDate>Sun, 20 Jun 2021 13:59:32 -0000</pubDate> <lastBuildDate>Sun, 20 Jun 2021 13:59:32 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v0.17.0</generator> <item> <title>Introduction</title> <description>&lt;h1&gt;Document&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;Useage: &lt;code&gt;C++17&lt;/code&gt; is required, &lt;code&gt;O2&lt;/code&gt; is suggested&lt;/li&gt;&lt;li&gt;Categories: math, date structure, graph theory, geometry, mixed&lt;/li&gt;&lt;li&gt;Note: algorithm name end wit...&lt;/li&gt;&lt;/ul&gt;</description><link>https://izlyforever.github.io/cpplibforCP/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/</guid> </item> <item> <title>CN</title> <description>&lt;p&gt;仅为补充，这里就放一个大致目录和一些核心内容的说明（有些英文说太麻烦）&lt;/p&gt;&lt;h1&gt;文档&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;使用：编译器需支持 C++17，强烈建议开启 O2 优化&lt;/li&gt;&lt;li&gt;分类：数学，数据结构，字符串，图论，几何，杂类&lt;/li&gt;&lt;li&gt;约定：以 S 为后缀的算法都是 慢且简单 的算法，？表示暂未实现。&lt;/li&gt;&lt;li&gt;下标：默认以 0 开头，目前只有__树...&lt;/li&gt;&lt;/ul&gt;</description><link>https://izlyforever.github.io/cpplibforCP/cn/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/cn/</guid> </item> <item> <title>Data Structure</title> <description>&lt;h1&gt;dataStructure.hpp&lt;/h1&gt;&lt;p&gt;Data Structures are ideals or models, It is hard to write once, used everywhere, for example, `Segment Tree, Disjoint set union, Mo&#39;s al...&lt;/p&gt;</description><link>https://izlyforever.github.io/cpplibforCP/dataStructure/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/dataStructure/</guid> </item> <item> <title>Graph Theory</title> <description>&lt;h1&gt;graph.hpp&lt;/h1&gt;&lt;h2&gt;Tree&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;DfsTour&lt;/li&gt;&lt;li&gt;EulerTour&lt;/li&gt;&lt;li&gt;LCA&lt;/li&gt;&lt;li&gt;Prim: Minimum Spanning Tree&lt;/li&gt;&lt;li&gt;LiuZhu: Minimum tree diagram&lt;/li&gt;&lt;li&gt;TopSort&lt;/li&gt;&lt;li&gt;EulerPath&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;code&gt;link/cut Tree&lt;/code&gt;, `dsu o...&lt;/p&gt;</description><link>https://izlyforever.github.io/cpplibforCP/graph/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/graph/</guid> </item> <item> <title>String</title> <description>&lt;h1&gt;string.hpp&lt;/h1&gt;&lt;h2&gt;Tire&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Trie: build a Trie&lt;/li&gt;&lt;li&gt;Trie01: find max xor sum&lt;/li&gt;&lt;li&gt;FusionTree: special Trie01, get xor sum(support modifty, add 1 to all) &lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;KMP&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;p...&lt;/li&gt;&lt;/ul&gt;</description><link>https://izlyforever.github.io/cpplibforCP/string/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/string/</guid> </item> <item> <title>geometry.hpp</title> <description>&lt;h1&gt;geometry.hpp&lt;/h1&gt;&lt;p&gt;It contains elementary method for geometry&lt;/p&gt;&lt;ul&gt;&lt;li&gt;cross: cross product&lt;/li&gt;&lt;li&gt;crossLeft: check if cross product is postive&lt;/li&gt;&lt;li&gt;dist&lt;/li&gt;&lt;li&gt;dist2: square of d...&lt;/li&gt;&lt;/ul&gt;</description><link>https://izlyforever.github.io/cpplibforCP/math/geometry/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/math/geometry/</guid> </item> <item> <title>mixed.hpp</title> <description>&lt;h1&gt;mixed.hpp&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;GospersHack: n choose k, brute-force(you should implement it to meet for needs)&lt;/li&gt;&lt;li&gt;$n$-th Fibonacci number&lt;/li&gt;&lt;li&gt;floorSum: $\displaystyle \sum_{i =...&lt;/li&gt;&lt;/ul&gt;</description><link>https://izlyforever.github.io/cpplibforCP/math/mixed/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/math/mixed/</guid> </item> <item> <title>numberTheory.hpp</title> <description>&lt;h1&gt;numberTheory.hpp&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;please use &lt;code&gt;g++ -o main main.cpp -std=c++17 -O2&lt;/code&gt; to complier examples below.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;Prime&lt;/h2&gt;&lt;p&gt;It is a singleton which has member &lt;code&gt;isP, p, pi&lt;/code&gt;...&lt;/p&gt;</description><link>https://izlyforever.github.io/cpplibforCP/math/numberTheory/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/math/numberTheory/</guid> </item> <item> <title>polyALL.hpp</title> <description>&lt;h1&gt;polyALL.hpp&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;The size: $N$ should be less than $10^6$ or $2^{22} \doteq 4 \cdot 10^6$ at least.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;code&gt;poly.hpp&lt;/code&gt; support almost every algorithm involved polyn...&lt;/p&gt;</description><link>https://izlyforever.github.io/cpplibforCP/math/poly/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/math/poly/</guid> </item> <item> <title>primary.hpp</title> <description>&lt;h1&gt;primary.hpp&lt;/h1&gt;&lt;p&gt;&lt;code&gt;primary.hpp&lt;/code&gt; is the foundation of &lt;code&gt;math.hpp&lt;/code&gt;&lt;/p&gt;&lt;h2&gt;mod.hpp&lt;/h2&gt;&lt;p&gt;There are three classes: &lt;code&gt;MInt&lt;/code&gt;, &lt;code&gt;ModInt&lt;/code&gt;, &lt;code&gt;ModLL&lt;/code&gt;. Only &lt;code&gt;MInt&lt;/code&gt; is a class template...&lt;/p&gt;</description><link>https://izlyforever.github.io/cpplibforCP/math/primary/</link> <pubDate>Sun, 20 Jun 2021 13:59:05 -0000</pubDate><source url="https://izlyforever.github.io/cpplibforCP/feed_rss_created.xml">izlyforever</source><guid isPermaLink="true">https://izlyforever.github.io/cpplibforCP/math/primary/</guid> </item> </channel></rss>